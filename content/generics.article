Generics
この章では、Goのジェネリック関数とジェネリック型について学びます。

The Go Authors
https://golang.org

* Type parameters

Go言語は、型パラメーターを使用して複数の型に対して動作する関数を記述できます。

関数の型パラメータは、関数の引数の前の括弧の間に現れます。

`func Index[T comparable](s []T, x T) int`

この宣言は、`s`が組み込み制約`comparable`を満たす任意の型`T`のスライスであることを意味します。

`comparable`は、型の値に対して`==`演算子や`!=`演算子を使用できるようにする便利な制約です。

この例では、一致が見つかるまで、すべてのスライス要素と値を比較するために使用します。

このIndex関数は、比較をサポートするすべての型に対して機能します。

.play generics/index.go

* Generic types

ジェネリック関数に加えて、Goはジェネリック型もサポートしています。

ジェネリック型は型パラメータでパラメータ化することが可能で、柔軟なデータ構造を実装するのに便利です。

この例では、任意の型の値を保持するシングルリンクリストの簡単な型宣言を示します。

練習として、このリストの実装に機能を追加してみましょう。

.play generics/list.go

* Congratulations!

この章はこれで終わりです。

[[/list][章のリスト]]から学びたいところを見ても良いですし、
[[javascript:click('.next-page')][>]] をクリックして次の章へ進みましょう。
